version: '3.9'

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--metrics.prometheus=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.rabbitmq.address=:15672"
      - "--metrics.prometheus.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "15672:15672"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    ports:
      - "9090:9090"
    # labels:
    #   - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - traefik

  grafana:
    image: grafana/grafana:8.3.0
    container_name: grafana
    ports:
      - "3000:8080"
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=8080"
    networks:
      - traefik

  keycloak_db:
    image: postgres:13.2
    restart: unless-stopped
    container_name: keycloak_db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    networks:
      - traefik
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  tasks_db:
    image: mysql:8-debian
    restart: unless-stopped
    container_name: tasks_db
    environment:
      MYSQL_DATABASE: tasks
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
    networks:
      - traefik
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  keycloak:
    depends_on:
      - keycloak_db
      - tasks_db
    container_name: keycloak_local
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: "true"
    image: quay.io/keycloak/keycloak:24.0.0
    volumes:
      - ./custom-storage-provider/docker/custom-storage-provider.jar:/opt/keycloak/providers/provider.jar
    ports:
      - "8081:8080"
    restart: unless-stopped
    command:
      - start-dev
    networks:
      - traefik
    labels:
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
    labels:
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost`)"
      - "traefik.http.services.mq.loadbalancer.server.port=15672"
      - "traefik.http.routers.mq.entrypoints=websecure"
    networks:
      - traefik

  # SUBIR GATEWAY POR ULTIMO

  # gateway:
  #   depends_on:
  #     - keycloak
  #   container_name: gateway_service
  #   restart: unless-stopped
  #   build:
  #     context: ../gateway/docker
  #     dockerfile: Dockerfile
  #   networks:
  #     - traefik
  #   ports:
  #     - "8085:8080"
  #   labels:
  #     - "traefik.http.routers.gateway.rule=Host(`gateway.localhost`)"
  #     - "traefik.http.services.gateway.loadbalancer.server.port=8080"
  #   environment:
  #     KEYCLOAK_CLIENT_ID: spring-cloud-test
  #     KEYCLOAK_CLIENT_SECRET: vuf8aY5rif80EnJ76JtMezrgbMHgHs4L
  #     KEYCLOAK_URI: http://keycloak:8080/realms/myrealm
      
networks:
  traefik:
    driver: bridge

volumes:
  postgres_data:
  mysql_data:
